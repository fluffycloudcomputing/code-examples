AWSTemplateFormatVersion: "2010-09-09"
Description: "Pipeline for Node app"
Parameters:
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: node-app
  GitHubOwner:
    Type: String
    Default: fluffycloudcomputing
  GitHubTokenKey:
    Type: String
    Default: /github/token
  S3BucketName:
    Type: String
    Default: fluffycloudcomputing-node-app
Resources:
  pipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CodePipelineRole
          PolicyDocument: !Sub |
              {
                "Statement": [              
                  {
                    "Sid": "SSM",
                    "Effect": "Allow",
                    "Action": [
                      "ssm:GetParameters"
                    ],
                    "Resource": [
                      "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${GitHubTokenKey}"
                    ]
                  },
                  {
                    "Sid": "S3",
                    "Effect": "Allow",
                    "Action": [
                      "s3:*",
                      "s3:GetObject"
                    ],
                    "Resource": [
                      "${PipelineS3Bucket.Arn}/*"
                    ]
                  },
                  {
                      "Sid": "CodeBuild",
                      "Action": [
                        "codebuild:StartBuild",
                        "codebuild:BatchGetBuilds"
                      ],
                      "Resource": [
                        "${CodeBuildTestProject.Arn}",
                        "${CodeBuildProject.Arn}"
                      ],
                      "Effect": "Allow"
                  }
                ],
                "Version": "2012-10-17"
              }
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: S3Codebuild
          PolicyDocument: !Sub
          - |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "CloudWatchLogsPolicy",
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:PutLogEvents"
                    ],
                    "Resource": [
                      "*"
                    ]
                  },
                  {
                    "Sid": "S3",
                    "Effect": "Allow",
                    "Action": [
                      "s3:PutObject",
                      "s3:GetObject"
                    ],
                    "Resource": [
                      "${BucketARN}/*"
                    ]
                  }
                ]
              }
          - BucketARN: !GetAtt PipelineS3Bucket.Arn
  AppPipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:ssm:${GitHubTokenKey}}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: "refs/heads/{Branch}"
      TargetPipeline: !Ref AppPipeline
      TargetAction: SourceAction
      Name: node-app-pipeline-webhook
      TargetPipelineVersion: !GetAtt AppPipeline.Version
      RegisterWithThirdParty: true
  CodeBuildTestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      Name: node-app-test
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-test.yaml
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      Name: node-app-build
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        SourceIdentifier: SourceOutput
        BuildSpec: buildspec.yaml
  PipelineS3Bucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub codepipeline-${AWS::Region}-${AWS::AccountId}
  PipelineS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineS3Bucket
      PolicyDocument: !Sub |
        {
           "Version": "2012-10-17",
           "Id": "SSEAndSSLPolicy",
           "Statement": [
               {
                   "Sid": "DenyUnEncryptedObjectUploads",
                   "Effect": "Deny",
                   "Principal": "*",
                   "Action": "s3:PutObject",
                   "Resource": "arn:aws:s3:::codepipeline-${AWS::Region}-${AWS::AccountId}/*",
                   "Condition": {
                       "StringNotEquals": {
                           "s3:x-amz-server-side-encryption": "aws:kms"
                       }
                   }
               },
               {
                   "Sid": "DenyInsecureConnections",
                   "Effect": "Deny",
                   "Principal": "*",
                   "Action": "s3:*",
                   "Resource": "arn:aws:s3:::codepipeline-${AWS::Region}-${AWS::AccountId}/*",
                   "Condition": {
                       "Bool": {
                           "aws:SecureTransport": "false"
                       }
                   }
               }
           ]
         }
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineS3Bucket
        Type: S3
      Name: node-pipeline
      RoleArn: !GetAtt pipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Repo: !Ref RepositoryName
                Owner: !Ref GitHubOwner
                PollForSourceChanges: false
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:ssm:${GitHubTokenKey}}}"
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: TestAction
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              RunOrder: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CodeBuildTestProject
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              RunOrder: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              RunOrder: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                BucketName: !Ref S3BucketName
                Extract: true
